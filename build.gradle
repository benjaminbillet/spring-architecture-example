plugins {
  id 'java'
  id 'org.springframework.boot' version '2.1.3.RELEASE' // the spring boot plugin
  id 'net.ltgt.apt' version '0.21' // an annotation processor used for mapstruct
  id 'org.sonarqube' version '2.7' // static code analyzer
}

// apply the tasks defined in the java plugin
apply plugin: 'java'

// apply the spring/spring boot plugins 
// (the io.spring.dependency-management plugin is a dependency of the org.springframework.boot plugin)
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

// apply sub-file
apply from: 'sonar.gradle'

// use maven central for downloading dependencies
repositories {
  mavenCentral()
}

// a few informations about our application
group = 'my.app'
version = '0.0.1-SNAPSHOT'
description = ''

// Java version compatibility
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

// the application entry point
springBoot {
  mainClassName = 'my.app.App'
}

bootRun {
  // if no SPRING_PROFILES_ACTIVE environment variable is set, the default will be local
  environment SPRING_PROFILES_ACTIVE: environment.SPRING_PROFILES_ACTIVE ?: "local"
}

// variables
ext {
	mapstructVersion = '1.3.0.Final'
  problemSpringWebVersion = '0.24.0-RC.0'
  jwtVersion = '0.10.6'
}

dependencies {
  // we use the spring web starter: https://github.com/spring-projects/spring-boot/blob/2.1.x/spring-boot-project/spring-boot-starters/spring-boot-starter-web/pom.xml
  implementation 'org.springframework.boot:spring-boot-starter-web'

  // jpa starter
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

  // spring security (we don't use it yet, but it's a dependency for org.zalando:problem-spring-web)
  implementation 'org.springframework.boot:spring-boot-starter-security'

  // mariadb client
  implementation 'org.mariadb.jdbc:mariadb-java-client'

  // jackson
  implementation "com.fasterxml.jackson.datatype:jackson-datatype-hppc" // high performance collections
  implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
  compile "com.fasterxml.jackson.datatype:jackson-datatype-hibernate5"
  implementation "com.fasterxml.jackson.core:jackson-annotations"
  implementation "com.fasterxml.jackson.core:jackson-databind"
  implementation "com.fasterxml.jackson.module:jackson-module-afterburner"

  // mapstruct
  implementation "org.mapstruct:mapstruct-jdk8:${mapstructVersion}"
  annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

  // Hibernate JPA Model generator
  annotationProcessor 'javax.xml.bind:jaxb-api' // https://stackoverflow.com/a/52835834
  annotationProcessor 'org.hibernate:hibernate-jpamodelgen'  

  // https://tools.ietf.org/html/rfc7807 implementation
  implementation "org.zalando:problem-spring-web:${problemSpringWebVersion}"

  // JSON Web Tokens
  implementation "io.jsonwebtoken:jjwt-api:${jwtVersion}"
  runtime "io.jsonwebtoken:jjwt-impl:${jwtVersion}"
  runtime "io.jsonwebtoken:jjwt-jackson:${jwtVersion}"

  // utils
  implementation "org.apache.commons:commons-lang3"
  implementation "org.apache.commons:commons-collections4:4.3"
}
